{"version":3,"file":"index.js","mappings":"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","sources":["webpack://latest-cpt-posts/./src/edit.js","webpack://latest-cpt-posts/./src/save.js","webpack://latest-cpt-posts/external window [\"wp\",\"blockEditor\"]","webpack://latest-cpt-posts/external window [\"wp\",\"data\"]","webpack://latest-cpt-posts/external window [\"wp\",\"element\"]","webpack://latest-cpt-posts/webpack/bootstrap","webpack://latest-cpt-posts/webpack/runtime/compat get default export","webpack://latest-cpt-posts/webpack/runtime/define property getters","webpack://latest-cpt-posts/webpack/runtime/hasOwnProperty shorthand","webpack://latest-cpt-posts/webpack/runtime/make namespace object","webpack://latest-cpt-posts/./src/index.js"],"sourcesContent":["import {useSelect,withSelect} from '@wordpress/data';\nconst {__} = wp.i18n;\nconst {InspectorControls} = wp.editor;\nconst {PanelBody, RangeControl, SelectControl, ToggleControl} = wp.components;\nconst {Fragment} = wp.element;\nexport default function Edit(props) {\n\n    const {postTypes} = useSelect((select) => {\n        const {getPostTypes} = select('core');\n        const query = {\n            per_page: -1,\n            public: 1,\n        }\n        return {\n            postTypes: getPostTypes(query),\n        }\n    });\n    let catOptions = [];\n    let options = [];\n    if (postTypes) {\n        options.push({value: 0, label: 'Select a post'})\n        postTypes.forEach((postType) => {\n            options.push({value: postType.slug, label: postType.name});\n        });\n    } else {\n        options.push({value: 0, label: 'Loading...'})\n    }\n\n    /* Fetch categories from selected post */\n\n    function updatePost(value){\n        props.setAttributes({\n            SelectedPostType: value,\n        });\n        /*if(postType.taxonomies.length){\n            let taxonomies = postType.taxonomies;\n            catOptions.push( { value: '0', label: 'Select Category' } );\n            taxonomies.forEach((taxonomy) => {\n                catOptions.push( { value: taxonomy, label: taxonomy } );\n            });\n        }\n        else {\n            catOptions.push( { value: '0', label: 'Loading...' } );\n        }*/\n        const {categories} = withSelect((select,props) => {\n            return {\n                categories:select( 'core' ).getEntityRecords(\n                    'taxonomy',\n                    value?value:'category',\n                    { per_page: -1, hide_empty: true }\n                ),\n            }\n        });\n        console.log(categories);\n\n        if ( categories && categories.length > 0 ) {\n            catOptions.push( { value: '0', label: 'Select Category' } );\n            categories.forEach( ( cat ) => {\n                if ( props.attributes.selectedCategory === cat.id ) {\n                    catOptions.push( {\n                        value: cat.id,\n                        label: cat.name,\n                        selected: true,\n                    } );\n                } else {\n                    catOptions.push( { value: cat.id, label: cat.name } );\n                }\n            } );\n        } else {\n            catOptions.push( { value: '0', label: 'Loading...' } );\n        }\n    }\n\n    return (\n        <Fragment>\n            <InspectorControls>\n                <PanelBody title={'Select Post Type'}>\n                    <SelectControl\n                        label=\"Select Post Type\"\n                        value={props.attributes.SelectedPostType}\n                        options={options}\n                        // onChange={(value) => props.setAttributes({SelectedPostType: value})}\n                        onChange={ updatePost }/>\n                </PanelBody>\n                <PanelBody title={'Select Post Type to show all categories'}>\n                    <SelectControl\n                        label=\"Select categories\"\n                        value={props.attributes.selectedCategory}\n                        options={catOptions}\n                        onChange={(value) => props.setAttributes({selectedCategory: value})}/>\n                </PanelBody>\n                <PanelBody title={'Parameter Settings'}>\n                    <RangeControl\n                        value={props.attributes.posts_per_page}\n                        label={'Number of posts'}\n                        min={0}\n                        max={50}\n                        initialPosition={12}\n                        allowReset\n                        onChange={(value) => props.setAttributes({posts_per_page: value})}/>\n                    <SelectControl\n                        label=\"Order By\"\n                        value={props.attributes.order}\n                        options={[\n                            {label: 'Ascending', value: 'ASC'},\n                            {label: 'Descending', value: 'DESC'},\n                        ]}\n                        onChange={(value) => props.setAttributes({order: value})}\n                    />\n                </PanelBody>\n                <PanelBody title={'Post Meta Settings'}>\n                    <ToggleControl\n                        label=\"Display Post Date\"\n                        checked={props.attributes.post_date}\n                        onChange={(value) => props.setAttributes({post_date: value})}\n                    />\n                </PanelBody>\n                <PanelBody title={'Post Excerpt Settings'}>\n                    <ToggleControl\n                        label=\"Display Post Excerpt\"\n                        checked={props.attributes.post_content}\n                        onChange={(value) => props.setAttributes({post_content: value})}\n                    />\n                </PanelBody>\n                <PanelBody title={'Image Settings'}>\n                    <SelectControl\n                        label=\"Image Size\"\n                        value={props.attributes.imagesize}\n                        options={[\n                            {label: 'Thumbnail', value: 'thumbnail'},\n                            {label: 'Medium', value: 'medium'},\n                            {label: 'Large', value: 'large'},\n                            {label: 'Full', value: 'full'},\n                        ]}\n                        onChange={(value) => props.setAttributes({imagesize: value})}\n                    />\n                </PanelBody>\n            </InspectorControls>\n            <div>\n\t\t\t\t\t<h3>{ __( 'Latest posts', 'dmb-blocks' ) }</h3>\n\t\t\t\t\t<div className=\"latest-wrapper\">\n\t\t\t\t\t\t{ ! props.attributes.SelectedPostType ? (\n\t\t\t\t\t\t\t'Select post type please'\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<LatestPosts props={ props.attributes } />\n\t\t\t\t\t\t) }\n\t\t\t\t\t</div>\n            </div>\n        </Fragment>\n    );\n}\n\nconst LatestPosts = ( { props } ) => {\n    const { result } = props;\n    console.log(result);\n    if ( ! result ) {\n        return (\n            <div>\n                { __( 'Loading...', 'dbm-blocks' ) }\n            </div>\n        );\n    }\n\n    if ( result.length === 0 ) {\n        return <div>{ __( 'No posts were found...', 'dbm-blocks' ) }</div>;\n    }\n\n    return result.map( ( item ) => {\n        const { id, title, thumbnail, excerpt } = item;\n        const image = thumbnail ? (\n            <img src={ thumbnail } />\n        ) : (\n            'Thumbnail is empty'\n        );\n\n        return (\n          item\n        );\n    } );\n};","/**\n * React hook that is used to mark the block wrapper element.\n * It provides all the necessary props like the class name.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/packages/packages-block-editor/#useblockprops\n */\nimport { useBlockProps } from '@wordpress/block-editor';\n\n/**\n * The save function defines the way in which the different attributes should\n * be combined into the final markup, which is then serialized by the block\n * editor into `post_content`.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-edit-save/#save\n *\n * @return {WPElement} Element to render.\n */\nexport default function save(props) {\n\treturn null;\n}\n","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * BLOCK: \"FYNXWP: Latest posts\"\n *\n * Registering a basic block with Gutenberg.\n * Simple block, renders and saves the same content without any interactivity.\n */\nconst {__} = wp.i18n;\n\nimport Edit from './edit';\nimport Save from './save';\nimport metadata from './block.json';\n\n\n/**\n * Register: Gutenberg Block.\n *\n * Registers a new block provided a unique name and an object defining its\n * behavior. Once registered, the block is made editor as an option to any\n * editor interface where blocks are implemented.\n *\n * @link https://wordpress.org/gutenberg/handbook/block-api/\n * @param  {string}   name     Block name.\n * @param  {Object}   settings Block settings.\n * @return {?WPBlock}          The block, if it has been successfully\n *                             registered; otherwise `undefined`.\n */\n\nconst {registerBlockType} = wp.blocks; // Import registerBlockType() from wp.blocks\n\nregisterBlockType(metadata.name, {\n    title: __(\"FYNXWP: Latest posts\"),\n    description: __('Display a list of your most recent posts including custom post types.'),\n    icon:metadata.icon,\n    category: metadata.category,\n    keywords: [\n        __('Recent posts'),\n        __('Latest post'),\n    ],\n    attributes: metadata.attributes,\n    edit: Edit,\n    save: Save,\n});"],"names":["useSelect","withSelect","__","wp","i18n","InspectorControls","editor","PanelBody","RangeControl","SelectControl","ToggleControl","components","Fragment","element","Edit","props","postTypes","select","getPostTypes","query","per_page","public","catOptions","options","push","value","label","forEach","postType","slug","name","updatePost","setAttributes","SelectedPostType","categories","getEntityRecords","hide_empty","console","log","length","cat","attributes","selectedCategory","id","selected","createElement","title","onChange","posts_per_page","min","max","initialPosition","allowReset","order","checked","post_date","post_content","imagesize","className","LatestPosts","result","map","item","thumbnail","excerpt","image","src","useBlockProps","save","Save","metadata","registerBlockType","blocks","description","icon","category","keywords","edit"],"sourceRoot":""}